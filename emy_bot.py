# -*- coding: utf-8 -*-
import telebot
import random
from telebot import types

TOKEN = '1283121145:AAH4zBmWYVSyp1N8OYgkkndGjabD6UoVqK0'
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤–°—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?")
    item2 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É")

    markup.add(item1, item2)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>,  —Ä–æ–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π "
                                      "—á—Ç–æ-–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –º–∞—Å–ª–æ".format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == '‚òÄÔ∏è–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüé≤':
            bot.send_message(message.chat.id, str(random.randint(0,100)))


        elif message.text == 'üé≤–°—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?':


                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("–ö–∞–º–µ–Ω—å", callback_data='3')
                item2 = types.InlineKeyboardButton("–ù–æ–∂–Ω–∏—Ü—ã ", callback_data='1')
                item3 = types.InlineKeyboardButton("–ë—É–º–∞–≥–∞", callback_data='2')
                item4 = types.InlineKeyboardButton("–Ø—â–µ—Ä–∏—Ü–∞", callback_data='4')
                item5 = types.InlineKeyboardButton("–°–ø–æ–∫", callback_data='5')
                item6 = types.InlineKeyboardButton("–ü–†–ê–í–ò–õ–ê", callback_data='6')

                markup.add(item1, item2, item3, item4, item5, item6)

                bot.send_message(message.chat.id, '–°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!', reply_markup=markup)

        else:
            bot.send_message(message.chat.id, message.text + 'üòä')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            compliance = {'1': 'scissors', '2': 'paper', '3': 'rock', '4': 'lizard', '5': 'Spock', '6': 'stop'}
            win = {'scissors': ('paper', 'lizard'), 'paper': ('rock', 'Spock'), 'rock': ('scissors', 'lizard'),
                   'lizard': ('Spock', 'paper'), 'Spock': ('scissors', 'rock')}

            option = ['scissors', 'paper', 'rock', 'lizard', 'Spock']
            rus = {'scissors' : '‚úÇ', 'paper' : 'üìÑ', 'rock' : 'üóø', 'lizard' : 'ü¶é', 'Spock' : 'üññ', 'stop' : '‚ùå'}

            random.shuffle(option)  # shuiffle
            computer_choise = random.choice(option)  # choise

            user_input = compliance.get(call.data)

            if user_input != 'stop' and user_input != "6":
                rus_user_input = rus.get(user_input)
                rus_bot_input = rus.get(computer_choise)
                bot.send_message(call.message.chat.id, '–¢–≤–æ–π –≤—ã–±–æ—Ä ')  # print('You chose is', user_input + "!")
                bot.send_message(call.message.chat.id, rus_user_input)
                bot.send_message(call.message.chat.id, '–ú–æ–π –≤—ã–±–æ—Ä ')
                bot.send_message(call.message.chat.id, rus_bot_input)
                win_combination = win.get(user_input)  # dict.get(key[, default])
                if computer_choise == user_input:
                # print('There is a draw', computer_choise)
                    bot.send_message(call.message.chat.id, '–≠—Ç–æ –ù–ò–ß–¨–Ø üëã')
                    # show alert
                    bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –ù–ò–ß–¨–Ø!!!!!")
                elif computer_choise in win_combination:
                    #print('Well done. Computer chose ' + computer_choise, 'and failed! :)')
                # show alert
                    bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –ü–û–ë–ï–î–ê!!11")
                    bot.send_message(call.message.chat.id, '–¢—ã –ü–û–ë–ï–î–ò–õ! üí•')
                # show alert
                else:
                    bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–≠–¢–û –ü–û–†–ê–ñ–ï–ù–ò–ï!!11")
                    bot.send_message(call.message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª! ‚òÉÔ∏è')
                #print('I liked it, come again, bye!')
                # remove inline buttons

            else:

                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–î–∞ –∫–æ–º—É –Ω—É–∂–Ω—ã —ç—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞!")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã–µ: –ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É. –ë—É–º–∞–≥–∞ "
                                           "–∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å. –ö–∞–º–µ–Ω—å –¥–∞–≤–∏—Ç —è—â–µ—Ä–∏—Ü—É, –∞ —è—â–µ—Ä–∏—Ü–∞ —Ç—Ä–∞–≤–∏—Ç –°–ø–æ–∫–∞, –≤ —Ç–æ "
                                           "–≤—Ä–µ–º—è –∫–∞–∫ –°–ø–æ–∫ –ª–æ–º–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ, –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å, –æ—Ç—Ä–µ–∑–∞—é—Ç –≥–æ–ª–æ–≤—É "
                                           "—è—â–µ—Ä–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è –µ—Å—Ç –±—É–º–∞–≥—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —É–ª–∏–∫–∏ –ø—Ä–æ—Ç–∏–≤ –°–ø–æ–∫–∞. –°–ø–æ–∫ –∏—Å–ø–∞—Ä—è–µ—Ç "
                                           "–∫–∞–º–µ–Ω—å, –∞ –∫–∞–º–µ–Ω—å, —Ä–∞–∑—É–º–µ–µ—Ç—Å—è, –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã. –í—Å—ë –ø—Ä–æ—Å—Ç–æ. –î–µ—Ä–∑–∞–π.)) ", reply_markup=None)

    except Exception as e:
        print(repr(e))







# RUN
bot.polling(none_stop=True)
